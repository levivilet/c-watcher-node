# Based on https://github.com/BurntSushi/ripgrep/blob/master/.github/workflows/release.yml by BurntSushi (License MIT)

name: release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      rg_version: ${{ env.RG_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        if: env.RG_VERSION == ''
        run: |
          echo "RG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.RG_VERSION }}"
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RG_VERSION }}
          release_name: ${{ env.RG_VERSION }}
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
          #   platform: linux
          #   arch: x64
          #   npm_config_arch: x64
          # - os: ubuntu-22.04
          #   platform: linux
          #   arch: arm64
          #   npm_config_arch: arm64
          # - os: ubuntu-22.04
          #   platform: linux
          #   arch: armhf
          #   npm_config_arch: arm
          # - os: ubuntu-22.04
          #   platform: alpine
          #   arch: x64
          #   npm_config_arch: x64
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('src/parts/DownloadBinary.js') }}
          restore-keys: ${{ runner.os }}-node-
      - name: npm ci
        run: npm ci
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - run: npm run postinstall
      - run: npm test
